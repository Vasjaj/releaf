- fields.each do |field|
  - if field.is_a?(String) or field.is_a?(Symbol)
    - reflection = f.object.class.reflections[field.to_sym]

  - if (field.is_a?(String) or field.is_a?(Symbol)) && !reflection
    - if has_template? "_#{view_prefix}.#{field}"
      = render "#{view_prefix}.#{field}", :f => f, :name => field
    - else
      = render 'edit.field', :f => f, :name => field, :view_prefix => view_prefix

  - elsif field.is_a? Hash
    - field.each_pair do |field, subfields|
      - reflection = f.object.class.reflections[field.to_sym]
      = render 'edit.fields.association', :f => f, :field => field, :subfields => subfields, :reflection => reflection, :view_prefix => view_prefix
  - elsif reflection
    - subfields = content_fields_to_display(reflection.klass)
    = render 'edit.fields.association', :f => f, :field => field, :subfields => subfields, :reflection => reflection, :view_prefix => view_prefix
