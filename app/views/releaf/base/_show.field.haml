- name_without_id_or_type = name.sub(/_(id|type)$/, '')

- if polymorphic_association_names(item).include?(name_without_id_or_type)
  -# name =~ /_id$/ is required to prevent user template from being renedred 2x times:
  -# first time for _id field, second time for _type field
  - if name =~ /_id$/ && has_template?( "_#{view_prefix}.#{name_without_id_or_type}" )
    = render "#{view_prefix}.#{name_without_id_or_type}", :item => item, :name => name, :view_prefix => view_prefix

- else
  - if has_template? "_#{view_prefix}.#{name}"
    = render "#{view_prefix}.#{name}", :item => item, :name => name, :view_prefix => view_prefix
  - else

    - render_field_type, use_i18n = render_field_type(item, name)
    - unless item.send(name).blank?
      - if use_i18n and has_template?( "_show.field_type.#{render_field_type}_i18n" )
        = render "show.field_type.#{render_field_type}_i18n", :item => item, :name => name

      - elsif has_template?( "_show.field_type.#{render_field_type}" )
        = render "show.field_type.#{render_field_type}", :item => item, :name => name

      - else
        = render "show.field_type.text", :item => item, :name => name
