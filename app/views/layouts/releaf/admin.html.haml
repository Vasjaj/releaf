:ruby
  body_classes = []
  body_classes << "controller-#{params[:controller].tr( '/', '-' )}"
  body_classes << "view-#{ controller.active_template.virtual_path.split('/').pop() if controller.active_template }"
  body_classes << "side-compact" if cookies['releaf.side.compact']

!!! 5
%html
  %head
    %title re:leaf
    %link{ :rel =>"icon", :href => asset_path("releaf/favicon.ico"), :type => "image/x-icon" }

    = stylesheet_link_tag "releaf/application"

    - _assets_path = __FILE__.split('/')[0...-1].join('/') + "/../../../assets"

    - controller_asset = params[:controller]
    - %w[css.scss.erb scss.erb css.scss scss css.erb css].each do |ext|
      - if File.exists?(_assets_path + "/stylesheets/releaf/controllers/#{controller_asset}.#{ext}")
        = stylesheet_link_tag "releaf/controllers/#{controller_asset}"
      - if File.exists?(Rails.root.to_s + "/app/assets/stylesheets/controllers/#{controller_asset}.#{ext}")
        = stylesheet_link_tag "controllers/#{controller_asset}"

    - unless Releaf.yui_config.blank?
      :javascript
        YUI_config = #{Releaf.yui_config.to_json}

    = csrf_meta_tags
  %body{:class => body_classes}
    - if self.send(:"#{Releaf::ReleafDeviseHelper.devise_admin_model_name}_signed_in?")
      %header
        .container-header
          %a.brand{:href => releaf_root_path}
          %ul.nav.block
            %li.profile
              %a{:href => "#"}
                %span.name= current_admin_user.to_text
                = gravatar_image_tag(current_admin_user.email, :alt => current_admin_user.to_text, :gravatar => { :size => 36 }, :class => "avatar")
            %li.sign-out
              %form{:action => self.send(:"destroy_#{Releaf::ReleafDeviseHelper.devise_admin_model_name}_session_path"), :method => "delete"}
                %button{:type => "submit"}
                  %i.icon-off.icon-header


      .side
        .compacter
          %button{:type => "button"}
            %i.toggle-angle-icon.icon-double-angle-left
        %nav
          %ul.block
            - admin_main_menu.each do |menu_item|
              %li{:class => [("active" if menu_item[:active]), ("collapsed" unless cookies['releaf.side.opened.' + menu_item[:name]]) ], "data-name" => menu_item[:name]}
                - if menu_item[:items]
                  %span.trigger
                    %i.icon-large{:class => "icon-" + menu_item[:icon]}
                    %span.name= t(menu_item[:name], :scope => "admin.menu_items")
                    %span.collapser
                      %button{:type => "button"}
                        %i.icon-small.chevron.icon-chevron-down
                  %ul.block
                    - menu_item[:items].each do |section_item|
                      %li
                        %a.trigger{:href => section_item[:url], :class => section_item[:active] ? :active_item : nil}
                          %span.name= t(section_item[:name], :scope => "admin.menu_items")
                          %i.icon-2x.icon-caret-left
                - else
                  %a.trigger{:href => menu_item[:url]}
                    %i.icon-large{:class => "icon-" + menu_item[:icon]}
                    %span.name= t(menu_item[:name], :scope => "admin.menu_items")
        .clear
        %footer
          CUBE

      .main{:id => "main"}= yield


    -##body_wrap{:class => "#{current_feature}-feature module-#{controller.controller_name} method-#{controller.action_name} controller-#{params[:controller].tr( '/', '-' )} action-#{controller.action_name} view-#{ controller.active_template.virtual_path.split('/').pop() if controller.active_template }"}
      -#- if self.send(:"#{Releaf::ReleafDeviseHelper.devise_admin_model_name}_signed_in?")
        -#.panel_layout
          .primary_panel
            = yield
      - else
        = yield

    #preload_wrap
      #preload
        .loading_icon

    %script{:type => 'text/javascript', :src => Releaf.yui_js_url}
    = javascript_include_tag "releaf/application"
    - %w[js js.erb].each do |ext|
      - if File.exists?(_assets_path + "/javascripts/releaf/controllers/#{controller_asset}.#{ext}")
        = javascript_include_tag "releaf/controllers/#{controller_asset}"
      - if File.exists?(Rails.root.to_s + "/app/assets/javascripts/controllers/#{controller_asset}.#{ext}")
        = javascript_include_tag "controllers/#{controller_asset}"
