.body.inset_box
  .section
    -#TODO: improve style/html
    -if f.object.errors.any?
      #error_explanation
        %strong= "#{pluralize(f.object.errors.count, "error")} prohibited this news from being saved:"
        %ul
          - f.object.errors.full_messages.each do |msg|
            %li= msg

    - @controller.columns( 'edit' ).each do |name|
      - if @controller.has_template( "_edit.field.#{name}" )
        = render "edit.field.#{name}", :name => name, :f => f
      - else
        = render 'edit.field', :name => name, :f => f


    - f.object.class.reflect_on_all_associations.each do |asoc|
      - case asoc.macro
      - when :has_many

        -# TODO remove code duplication
        .nested_wrap
          .nested_title= I18n.t(asoc.name)
          .list
            - f.object.send(asoc.name).each_with_index do |asoc_obj,i|
              .item
                = f.fields_for asoc.name, asoc_obj, :child_index => i do |ff|
                  - (asoc_obj.class.column_names - %w[id updated_at created_at]).reject {|f| f =~ /_id$/ }.each do |field_name|
                    = render 'edit.field', :name => field_name, :f => ff
                  = render 'edit.field.type_delete_nested', :f => ff


          .template.item{:style => 'display:none;'}
            - asoc_obj = asoc.klass.new
            = f.fields_for asoc.name, asoc_obj, :child_index => :_template_ do |ff|
              - (asoc_obj.class.column_names - %w[id updated_at created_at]).reject {|f| f =~ /_id$/ }.each do |field_name|
                = render 'edit.field', :name => field_name, :f => ff
              = render 'edit.field.type_delete_nested', :f => ff

          %button.add.new(type='button')
            = image_tag 'leaf/icons/add.png', :atl => ''
            %span New
